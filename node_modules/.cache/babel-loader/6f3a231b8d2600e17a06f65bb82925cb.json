{"ast":null,"code":"var _jsxFileName = \"C:\\\\WWW\\\\ESTUDOS\\\\React-Hooks-Context\\\\novo-projeto-aprender-o-basico-react\\\\src\\\\App\\\\pages\\\\login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const history = useHistory();\n  const inputPassword = useRef(null); //pegar a senha e e-mails digitados no input. \n  //Essa linha 29 vai salvar o que digitarmos no campo input e-mail -> onChange={e => setEmail(e.target.value)}\n  //Essa linha 34 vai salvar o que digitarmos no campo input password -> onChange={e => setPassword(e.target.value)}\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleEntrar = useCallback(() => {\n    console.log(email);\n    console.log(password);\n\n    if (imputPasswordRef.current != null) {\n      /*#__PURE__*/\n      _jsxDEV(\"imputPasswordRef\", {\n        className: \"current fo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this);\n    }\n  }, [email, password]);\n  /**\r\n   * Se eu coloco esse if fora do useEffect a cada letra digitada nos campos de\r\n   * input da página ele ia rodar o if e o else perguntando para o usuário se \r\n   * ele quer logar. \r\n   * Dentro do useEffect, por causa do segundo paramentro que é um array que pode \r\n   * ou não ser vazio, ele só vai fazer essa função uma unica vez. \r\n   * Obs.: Se usarmos o useEffect sem o segundo parametro ele irá se comportar \r\n   * da mesma maneira que o if e else sem o useEffect.\r\n   */\n\n  useEffect(() => {\n    if (window.confirm('Você deseja logar?')) {\n      console.log('Sim');\n    } else {\n      console.log('Não');\n    }\n  }, []);\n  useEffect(() => {\n    console.log(email, password);\n  }, [email, password]);\n  /* \r\n  useEffect(() => {\r\n    console.log(email)\r\n  }, [email])\r\n    useEffect(() => {\r\n    console.log(password)\r\n  }, [password])\r\n  */\n\n  const emailLength = useMemo(() => {\n    console.log('Executou');\n    return email.length;\n  }, [email.length]);\n\n  const handleClick = () => {\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Senha \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            ref: inputPassword,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleEntrar,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantidade de caracteres no e-mail \\xE9: \", emailLength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Pagina inicial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"G927E00RGpruKU/tsOb2U2KVdgQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/WWW/ESTUDOS/React-Hooks-Context/novo-projeto-aprender-o-basico-react/src/App/pages/login/Login.tsx"],"names":["useCallback","useEffect","useMemo","useRef","useState","useHistory","Login","history","inputPassword","email","setEmail","password","setPassword","handleEntrar","console","log","imputPasswordRef","current","window","confirm","emailLength","length","handleClick","push","e","target","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AAEA,QAAMG,aAAa,GAAGL,MAAM,CAAmB,IAAnB,CAA5B,CAHyB,CAKzB;AACA;AACA;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMS,YAAY,GAAGb,WAAW,CAAC,MAAM;AACrCc,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAGK,gBAAgB,CAACC,OAAjB,IAA4B,IAA/B,EAAqC;AACnC;AAAA;AAAkB,QAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AACD;AAEF,GAP+B,EAO7B,CAACR,KAAD,EAAQE,QAAR,CAP6B,CAAhC;AASA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACEV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,MAAM,CAACC,OAAP,CAAe,oBAAf,CAAJ,EAA0C;AACxCL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBE,QAAnB;AACD,GAFQ,EAEN,CAACF,KAAD,EAAQE,QAAR,CAFM,CAAT;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,QAAMS,WAAW,GAAGlB,OAAO,CAAC,MAAM;AAChCY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAON,KAAK,CAACY,MAAb;AACD,GAH0B,EAGxB,CAACZ,KAAK,CAACY,MAAP,CAHwB,CAA3B;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxBf,IAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA,gCAEE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,KAAK,EAAEd,KAAd;AAAqB,YAAA,QAAQ,EAAEe,CAAC,IAAId,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,KAAK,EAAEf,QAFP;AAGA,YAAA,GAAG,EAAEH,aAHL;AAIA,YAAA,QAAQ,EAAEgB,CAAC,IAAIZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAgBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEb,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAmBE;AAAA,kEAA0CO,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA9FM;;GAAMhB,K;UACKD,U;;;KADLC,K","sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n  const history = useHistory();\r\n\r\n  const inputPassword = useRef<HTMLInputElement>(null);\r\n\r\n  //pegar a senha e e-mails digitados no input. \r\n  //Essa linha 29 vai salvar o que digitarmos no campo input e-mail -> onChange={e => setEmail(e.target.value)}\r\n  //Essa linha 34 vai salvar o que digitarmos no campo input password -> onChange={e => setPassword(e.target.value)}\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleEntrar = useCallback(() => {\r\n    console.log(email)\r\n    console.log(password)\r\n    if(imputPasswordRef.current != null ){\r\n      <imputPasswordRef className=\"current fo\"></imputPasswordRef>\r\n    }\r\n\r\n  }, [email, password]);\r\n\r\n  /**\r\n   * Se eu coloco esse if fora do useEffect a cada letra digitada nos campos de\r\n   * input da página ele ia rodar o if e o else perguntando para o usuário se \r\n   * ele quer logar. \r\n   * Dentro do useEffect, por causa do segundo paramentro que é um array que pode \r\n   * ou não ser vazio, ele só vai fazer essa função uma unica vez. \r\n   * Obs.: Se usarmos o useEffect sem o segundo parametro ele irá se comportar \r\n   * da mesma maneira que o if e else sem o useEffect.\r\n   */\r\n  useEffect(() => {\r\n    if (window.confirm('Você deseja logar?')) {\r\n      console.log('Sim')\r\n    } else {\r\n      console.log('Não')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(email, password)\r\n  }, [email, password])\r\n\r\n  /* \r\n  useEffect(() => {\r\n    console.log(email)\r\n  }, [email])\r\n\r\n  useEffect(() => {\r\n    console.log(password)\r\n  }, [password])\r\n */\r\n\r\n  const emailLength = useMemo(() => {\r\n    console.log('Executou')\r\n    return email.length;\r\n  }, [email.length])\r\n\r\n  const handleClick = () => {\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form action=\"\">\r\n\r\n          <label htmlFor=\"\">\r\n            <span>Email </span>\r\n            <input value={email} onChange={e => setEmail(e.target.value)} />\r\n          </label>\r\n\r\n          <label htmlFor=\"\">\r\n            <span>Senha </span>\r\n            <input \r\n            type=\"password\" \r\n            value={password} \r\n            ref={inputPassword}\r\n            onChange={e => setPassword(e.target.value)} />\r\n          </label>\r\n\r\n          <button type=\"button\" onClick={handleEntrar}>\r\n            Entrar\r\n          </button>\r\n          <p>Quantidade de caracteres no e-mail é: {emailLength}</p>\r\n        </form>\r\n      </div>\r\n\r\n\r\n\r\n      <p>Login</p>\r\n      <div>\r\n        <button onClick={handleClick}>Pagina inicial</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}